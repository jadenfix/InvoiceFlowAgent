# Add this job to .github/workflows/ci-cd.yml after the "e2e-tests" job

  # End-to-End Pipeline Tests
  e2e-pipeline:
    name: End-to-End Pipeline Tests
    runs-on: ubuntu-latest
    needs: [auth-service-tests, match-service-tests]
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install e2e test dependencies
        run: |
          cd services/e2e
          pip install -r requirements.txt

      - name: Build service images
        run: |
          # Build images for all services
          if [ -d "services/ingest" ]; then
            docker build -t invoiceflow/ingest:e2e services/ingest/
          fi
          if [ -d "services/extract" ]; then
            docker build -t invoiceflow/extract:e2e services/extract/
          fi
          if [ -d "services/match" ]; then
            docker build -t invoiceflow/match:e2e services/match/
          fi

      - name: Start services with docker-compose
        run: |
          docker-compose -f docker-compose.e2e.yml up -d
          
          # Wait for services to be healthy
          timeout=120
          elapsed=0
          
          while [ $elapsed -lt $timeout ]; do
            if docker-compose -f docker-compose.e2e.yml ps | grep -q "healthy"; then
              ingest_health=$(docker inspect invoiceflow-ingest-e2e --format='{{.State.Health.Status}}' 2>/dev/null || echo "unknown")
              extract_health=$(docker inspect invoiceflow-extract-e2e --format='{{.State.Health.Status}}' 2>/dev/null || echo "unknown")
              match_health=$(docker inspect invoiceflow-match-e2e --format='{{.State.Health.Status}}' 2>/dev/null || echo "unknown")
              
              if [ "$ingest_health" = "healthy" ] && [ "$extract_health" = "healthy" ] && [ "$match_health" = "healthy" ]; then
                echo "All services are healthy"
                break
              fi
            fi
            
            echo "Waiting for services to become healthy... ($elapsed/$timeout)"
            sleep 10
            elapsed=$((elapsed + 10))
          done
          
          if [ $elapsed -ge $timeout ]; then
            echo "Services failed to become healthy"
            docker-compose -f docker-compose.e2e.yml ps
            docker-compose -f docker-compose.e2e.yml logs
            exit 1
          fi

      - name: Run end-to-end tests
        timeout-minutes: 5
        run: |
          cd services/e2e
          python -m pytest test_full_pipeline.py -v --timeout=300

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: |
            services/e2e/htmlcov/
            services/e2e/coverage.xml

      - name: Cleanup services
        if: always()
        run: |
          docker-compose -f docker-compose.e2e.yml down --remove-orphans
          docker-compose -f docker-compose.e2e.yml rm -f

# Also update the build-images job to depend on e2e-pipeline:
# needs: [terraform-validation, auth-service-tests, frontend-tests, e2e-pipeline]

# And update the deploy-dev job to depend on e2e-pipeline:
# needs: [build-images, e2e-pipeline] 