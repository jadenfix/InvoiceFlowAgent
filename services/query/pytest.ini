[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=90
    --durations=10

# Markers for different test types
markers =
    unit: Unit tests that don't require external services
    integration: Integration tests that require Docker containers
    slow: Tests that take more than 5 seconds
    security: Security and validation tests
    performance: Performance and timing tests
    acceptance: Acceptance criteria validation tests

# Test environment
env =
    TESTING = true
    LOG_LEVEL = WARNING
    REDIS_URL = redis://localhost:6379
    OPENSEARCH_URL = http://localhost:9200

# Async test support
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/main.py
    */tests/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod 